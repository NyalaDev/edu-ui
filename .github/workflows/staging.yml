name: Staging Pipeline

on: [pull_request]

jobs:
  ping-dev-server:
    name: Ping Dev server
    runs-on: ubuntu-latest
    steps:
      - name: Ping dev api
        run: curl ${{ secrets.GATSBY_STRAPI_DEV_API_URL }}
  lint-and-test:
    name: Syntax check (Eslint) and Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
      - name: Run Eslint
        run: yarn lint
      - name: Run Tests
        run: yarn test
  build-and-deploy:
    name: Build and deploy the site to staging
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Install dependencies
        run: yarn
      - name: Build website
        run: yarn build
        env:
          GATSBY_STRAPI_API_URL: ${{ secrets.GATSBY_STRAPI_DEV_API_URL }}
          GATSBY_S3_BUCKET: ${{ secrets.S3_BUCKET_DEV }}
          GATSBY_SITE_URL: 'https://edu.nyaladev.com'
          GATSBY_DASHBOARD_URL: 'https://edu-dashboard.nyaladev.com'
          GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
          GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
          GATSBY_GOOGLE_ANALYTICS_ID: ${{ secrets.GATSBY_GOOGLE_ANALYTICS_ID }}
      - name: Deploy website
        run: yarn deploy
  invalidate:
    name: Invalidate cloudfront cache
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id "${{ secrets.CLOUD_FRONT_DEV_DISTRIBUTION }}" --paths "/*"
